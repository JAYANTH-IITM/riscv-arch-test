
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.12.2
// timestamp : Mon Oct 21 08:16:42 2024 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /home/saravana/riscv-arch-test/coverage/dataset.cgf \
//                  --cgf /home/saravana/riscv-arch-test/coverage/zcmp/cm.push.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the cm.push instruction of the RISC-V RV32_Zca_Zcmp extension for the cm.push covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32I_Zca_Zcmp")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*Zca.*Zcmp.*);def TEST_CASE_1=True;",cm.push)

RVTEST_SIGBASE(x2,signature_x2_1)

inst_0:
// rs1==x20, imm_val == 0, 
// opcode: cm.push; immval:0x0 ; op1:x20 ; rlist:9 
TEST_PUSH(cm.push,0x0,x20,9)

inst_1:
// rs1==x27, imm_val == 1, 
// opcode: cm.push; immval:0x1 ; op1:x27 ; rlist:15 
TEST_PUSH(cm.push,0x1,x27,15)

inst_2:
// rs1==x18, imm_val == 2, 
// opcode: cm.push; immval:0x2 ; op1:x18 ; rlist:7 
TEST_PUSH(cm.push,0x2,x18,7)

inst_3:
// rs1==x24, imm_val == 3, 
// opcode: cm.push; immval:0x3 ; op1:x24 ; rlist:13 
TEST_PUSH(cm.push,0x3,x24,13)

inst_4:
// rs1==x1, 
// opcode: cm.push; immval:0x0 ; op1:x1 ; rlist:4 
TEST_PUSH(cm.push,0x0,x1,4)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;



signature_x2_0:
    .fill 0*((XLEN/8)/4),4,0xdeadbeef


signature_x2_1:
    .fill 5*((XLEN/8)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine
tsig_begin_canary:
CANARY;

mtrap_sigptr:
    .fill 64*XLEN/32,4,0xdeadbeef

tsig_end_canary:
CANARY;
#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif


sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
